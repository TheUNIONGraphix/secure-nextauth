{"version":3,"file":"index.js","sources":["../src/context/SecureSessionContext.ts","../src/provider/SecureSessionProvider.tsx","../src/provider/DynamicSecureSessionProvider.tsx","../src/provider/SimpleSecureSessionProvider.tsx","../src/hooks/useAuthStatus.ts","../src/utils/authHelpers.ts","../src/utils/serverHelpers.ts"],"sourcesContent":["\"use client\";\nimport React, { createContext, useContext } from \"react\";\nimport { SecureSessionContextType } from '../types';\n\n// 서버 컴포넌트 호환성을 위한 안전한 Context 생성\nconst SecureSessionContext = createContext<SecureSessionContextType>({\n  isAuthenticated: false,\n});\n\nexport { SecureSessionContext };\n\nexport const useSecureSession = (): SecureSessionContextType => {\n  // 서버 사이드에서는 기본값 반환\n  if (typeof window === 'undefined') {\n    return { isAuthenticated: false };\n  }\n\n  // 전역 변수에서 먼저 확인\n  if (typeof window !== 'undefined' && (window as any).__NEXTAUTH_SECURE_AUTH_STATUS__ !== undefined) {\n    return { isAuthenticated: (window as any).__NEXTAUTH_SECURE_AUTH_STATUS__ };\n  }\n\n  const context = useContext(SecureSessionContext);\n  if (context === undefined) {\n    // Context가 없으면 전역 변수에서 확인\n    const globalAuthStatus = (window as any).__NEXTAUTH_SECURE_AUTH_STATUS__;\n    return { isAuthenticated: globalAuthStatus || false };\n  }\n  return context;\n};\n","\"use client\";\nimport React from \"react\";\nimport { SecureSessionContext } from '../context/SecureSessionContext';\n\ninterface SecureSessionProviderProps {\n  children: React.ReactNode;\n  isAuthenticated: boolean;\n}\n\n// 서버 컴포넌트 호환성을 위한 동적 import 지원\nexport function SecureSessionProvider({ children, isAuthenticated }: SecureSessionProviderProps) {\n  // 클라이언트에서만 Context를 사용하도록 보장\n  if (typeof window === 'undefined') {\n    // 서버 사이드에서는 children만 반환\n    return <>{children}</>;\n  }\n\n  return (\n    <SecureSessionContext.Provider value={{ isAuthenticated }}>\n      {children}\n    </SecureSessionContext.Provider>\n  );\n}\n\n// 동적 import를 위한 별도 export\nexport default SecureSessionProvider;\n","import React from 'react';\n\ninterface DynamicSecureSessionProviderProps {\n  children: React.ReactNode;\n  isAuthenticated: boolean;\n}\n\n// 서버 컴포넌트에서 안전하게 사용할 수 있는 래퍼\nexport function DynamicSecureSessionProvider({ \n  children, \n  isAuthenticated \n}: DynamicSecureSessionProviderProps) {\n  // 서버 사이드에서는 children만 반환\n  if (typeof window === 'undefined') {\n    return <>{children}</>;\n  }\n\n  // 클라이언트에서만 동적 import\n  const [Provider, setProvider] = React.useState<React.ComponentType<any> | null>(null);\n\n  React.useEffect(() => {\n    import('./SecureSessionProvider').then((module) => {\n      setProvider(() => module.default || module.SecureSessionProvider);\n    }).catch((error) => {\n      console.error('Failed to load SecureSessionProvider:', error);\n    });\n  }, []);\n\n  if (!Provider) {\n    // Provider가 로드되지 않았으면 children만 반환\n    return <>{children}</>;\n  }\n\n  return <Provider isAuthenticated={isAuthenticated}>{children}</Provider>;\n} ","import React from 'react';\n\ninterface SimpleSecureSessionProviderProps {\n  children: React.ReactNode;\n  isAuthenticated: boolean;\n}\n\n// Context 없이 작동하는 간단한 Provider\nexport function SimpleSecureSessionProvider({ \n  children, \n  isAuthenticated \n}: SimpleSecureSessionProviderProps) {\n  // 서버 사이드에서는 children만 반환\n  if (typeof window === 'undefined') {\n    return <>{children}</>;\n  }\n\n  // 클라이언트에서만 인증 상태를 전역 변수로 설정\n  if (typeof window !== 'undefined') {\n    (window as any).__NEXTAUTH_SECURE_AUTH_STATUS__ = isAuthenticated;\n  }\n\n  return <>{children}</>;\n} ","\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport { AuthStatusResponse, SecureNextAuthConfig } from '../types';\n\nexport function useAuthStatus(config?: SecureNextAuthConfig) {\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const endpoint = config?.authStatusEndpoint || '/api/auth/status';\n\n  const checkAuthStatus = async () => {\n    // 서버 사이드에서는 실행하지 않음\n    if (typeof window === 'undefined') {\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // 먼저 전역 변수에서 확인\n      if (typeof window !== 'undefined' && (window as any).__NEXTAUTH_SECURE_AUTH_STATUS__ !== undefined) {\n        const globalAuthStatus = (window as any).__NEXTAUTH_SECURE_AUTH_STATUS__;\n        setIsAuthenticated(globalAuthStatus);\n        if (config?.onAuthChange) {\n          config.onAuthChange(globalAuthStatus);\n        }\n        setIsLoading(false);\n        return;\n      }\n      \n      const response = await fetch(endpoint);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      // Check if response is JSON\n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error('Response is not JSON');\n      }\n      \n      let data: AuthStatusResponse;\n      try {\n        data = await response.json();\n      } catch (jsonError) {\n        throw new Error('Invalid JSON response');\n      }\n      \n      const newAuthStatus = data.isAuthenticated;\n      \n      setIsAuthenticated(newAuthStatus);\n      \n      // 전역 변수에도 저장\n      if (typeof window !== 'undefined') {\n        (window as any).__NEXTAUTH_SECURE_AUTH_STATUS__ = newAuthStatus;\n      }\n      \n      // Call the optional callback\n      if (config?.onAuthChange) {\n        config.onAuthChange(newAuthStatus);\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to check auth status';\n      setError(errorMessage);\n      setIsAuthenticated(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // 클라이언트에서만 실행\n    if (typeof window !== 'undefined') {\n      checkAuthStatus();\n    }\n  }, [endpoint]);\n\n  return {\n    isAuthenticated,\n    isLoading,\n    error,\n    refetch: checkAuthStatus,\n  };\n}\n","\"use client\";\nimport { AuthStatusResponse, SecureNextAuthConfig } from '../types';\n\nexport async function checkAuthStatus(config?: SecureNextAuthConfig): Promise<AuthStatusResponse> {\n  // 서버 사이드에서는 기본값 반환\n  if (typeof window === 'undefined') {\n    return { isAuthenticated: false };\n  }\n\n  const endpoint = config?.authStatusEndpoint || '/api/auth/status';\n  \n  try {\n    const response = await fetch(endpoint);\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    // Check if response is JSON\n    const contentType = response.headers.get('content-type');\n    if (!contentType || !contentType.includes('application/json')) {\n      throw new Error('Response is not JSON');\n    }\n    \n    let data: AuthStatusResponse;\n    try {\n      data = await response.json();\n    } catch (jsonError) {\n      throw new Error('Invalid JSON response');\n    }\n    \n    return data;\n  } catch (error) {\n    console.error('Auth status check failed:', error);\n    return { isAuthenticated: false };\n  }\n}\n\nexport function createAuthStatusEndpoint(handler: () => Promise<AuthStatusResponse>) {\n  return async function authStatusHandler() {\n    try {\n      const result = await handler();\n      return new Response(JSON.stringify(result), {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n    } catch (error) {\n      console.error('Auth status endpoint error:', error);\n      return new Response(JSON.stringify({ isAuthenticated: false }), {\n        status: 500,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n    }\n  };\n} ","import { getServerSession } from 'next-auth';\nimport { NextAuthOptions } from 'next-auth';\nimport { redirect } from 'next/navigation';\nimport { NextRequest, NextResponse } from 'next/server';\nimport { AuthStatusResponse } from '../types';\n\n/**\n * Server-side helper to get authentication status\n * This should be used in your API route or server components\n */\nexport async function getAuthStatus(options: NextAuthOptions): Promise<boolean> {\n  try {\n    const session = await getServerSession(options);\n    return !!session?.user;\n  } catch (error) {\n    console.error('Error checking auth status:', error);\n    return false;\n  }\n}\n\n/**\n * Helper to create a standardized auth status API response\n */\nexport function createAuthStatusResponse(isAuthenticated: boolean): AuthStatusResponse {\n  return {\n    isAuthenticated,\n  };\n}\n\n/**\n * Middleware helper to check if user is authenticated\n */\nexport function requireAuth(isAuthenticated: boolean, redirectUrl?: string) {\n  if (!isAuthenticated) {\n    if (redirectUrl) {\n      return {\n        redirect: {\n          destination: redirectUrl,\n          permanent: false,\n        },\n      };\n    }\n    throw new Error('Authentication required');\n  }\n  return null;\n}\n\n/**\n * Server component helper that automatically redirects if not authenticated\n */\nexport async function requireAuthOrRedirect(\n  options: NextAuthOptions,\n  redirectTo: string = '/signin'\n): Promise<void> {\n  const isAuthenticated = await getAuthStatus(options);\n  if (!isAuthenticated) {\n    redirect(redirectTo);\n  }\n}\n\n/**\n * Creates a middleware function for protecting routes\n */\nexport function createAuthMiddleware(\n  protectedPaths: string[],\n  loginPath: string = '/signin'\n) {\n  return async function middleware(request: NextRequest) {\n    const { pathname } = request.nextUrl;\n    \n    // Check if the current path should be protected\n    const isProtectedPath = protectedPaths.some(path => \n      pathname.startsWith(path) || pathname === path\n    );\n    \n    if (!isProtectedPath) {\n      return NextResponse.next();\n    }\n\n    // Check authentication status by calling the auth status API\n    try {\n      const authResponse = await fetch(new URL('/api/auth/status', request.url));\n      \n      if (!authResponse.ok) {\n        throw new Error(`Auth API error: ${authResponse.status}`);\n      }\n      \n      // Check if response is JSON\n      const contentType = authResponse.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error('Auth API response is not JSON');\n      }\n      \n      let authData;\n      try {\n        authData = await authResponse.json();\n      } catch (jsonError) {\n        throw new Error('Invalid JSON response from auth API');\n      }\n      \n      const { isAuthenticated } = authData;\n\n      if (!isAuthenticated) {\n        const loginUrl = new URL(loginPath, request.url);\n        loginUrl.searchParams.set('callbackUrl', pathname);\n        return NextResponse.redirect(loginUrl);\n      }\n    } catch (error) {\n      console.error('Auth middleware error:', error);\n      // If we can't check auth status, redirect to login for security\n      const loginUrl = new URL(loginPath, request.url);\n      loginUrl.searchParams.set('callbackUrl', pathname);\n      return NextResponse.redirect(loginUrl);\n    }\n\n    return NextResponse.next();\n  };\n} "],"names":["createContext","useContext","_jsx","_Fragment","useState","useEffect","getServerSession","redirect","NextResponse"],"mappings":"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"}