{"version":3,"file":"server.esm.js","sources":["../src/utils/serverHelpers.ts","../src/utils/autoSetup.ts"],"sourcesContent":["import { getServerSession } from 'next-auth';\nimport { NextAuthOptions } from 'next-auth';\nimport { redirect } from 'next/navigation';\nimport { NextRequest, NextResponse } from 'next/server';\nimport { AuthStatusResponse } from '../types';\n\n/**\n * Server-side helper to get authentication status\n * This should be used in your API route or server components\n */\nexport async function getAuthStatus(options: NextAuthOptions): Promise<boolean> {\n  try {\n    const session = await getServerSession(options);\n    return !!session?.user;\n  } catch (error) {\n    console.error('Error checking auth status:', error);\n    return false;\n  }\n}\n\n/**\n * Helper to create a standardized auth status API response\n */\nexport function createAuthStatusResponse(isAuthenticated: boolean): AuthStatusResponse {\n  return {\n    isAuthenticated,\n  };\n}\n\n/**\n * Middleware helper to check if user is authenticated\n */\nexport function requireAuth(isAuthenticated: boolean, redirectUrl?: string) {\n  if (!isAuthenticated) {\n    if (redirectUrl) {\n      return {\n        redirect: {\n          destination: redirectUrl,\n          permanent: false,\n        },\n      };\n    }\n    throw new Error('Authentication required');\n  }\n  return null;\n}\n\n/**\n * Server component helper that automatically redirects if not authenticated\n */\nexport async function requireAuthOrRedirect(\n  options: NextAuthOptions,\n  redirectTo: string = '/signin'\n): Promise<void> {\n  const isAuthenticated = await getAuthStatus(options);\n  if (!isAuthenticated) {\n    redirect(redirectTo);\n  }\n}\n\n/**\n * Creates a middleware function for protecting routes\n */\nexport function createAuthMiddleware(\n  protectedPaths: string[],\n  loginPath: string = '/signin'\n) {\n  return async function middleware(request: NextRequest) {\n    const { pathname } = request.nextUrl;\n    \n    // Check if the current path should be protected\n    const isProtectedPath = protectedPaths.some(path => \n      pathname.startsWith(path) || pathname === path\n    );\n    \n    if (!isProtectedPath) {\n      return NextResponse.next();\n    }\n\n    // Check authentication status by calling the auth status API\n    try {\n      const authResponse = await fetch(new URL('/api/auth/status', request.url));\n      \n      if (!authResponse.ok) {\n        throw new Error(`Auth API error: ${authResponse.status}`);\n      }\n      \n      // Check if response is JSON\n      const contentType = authResponse.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error('Auth API response is not JSON');\n      }\n      \n      let authData;\n      try {\n        authData = await authResponse.json();\n      } catch (jsonError) {\n        throw new Error('Invalid JSON response from auth API');\n      }\n      \n      const { isAuthenticated } = authData;\n\n      if (!isAuthenticated) {\n        const loginUrl = new URL(loginPath, request.url);\n        loginUrl.searchParams.set('callbackUrl', pathname);\n        return NextResponse.redirect(loginUrl);\n      }\n    } catch (error) {\n      console.error('Auth middleware error:', error);\n      // If we can't check auth status, redirect to login for security\n      const loginUrl = new URL(loginPath, request.url);\n      loginUrl.searchParams.set('callbackUrl', pathname);\n      return NextResponse.redirect(loginUrl);\n    }\n\n    return NextResponse.next();\n  };\n} ","import fs from 'fs';\nimport path from 'path';\n\nexport interface AutoSetupOptions {\n  projectRoot?: string;\n  apiRoute?: string;\n  componentName?: string;\n  authOptionsPath?: string;\n}\n\nexport function generateAuthStatusAPI(options: AutoSetupOptions = {}) {\n  const {\n    projectRoot = process.cwd(),\n    apiRoute = '/api/auth/status',\n    authOptionsPath = '@/lib/auth'\n  } = options;\n\n  const apiContent = `import { getAuthStatus, createAuthStatusResponse } from 'nextauth-secure';\nimport { authOptions } from '${authOptionsPath}';\n\nexport async function GET() {\n  try {\n    const isAuthenticated = await getAuthStatus(authOptions);\n    const response = createAuthStatusResponse(isAuthenticated);\n    \n    return Response.json(response);\n  } catch (error) {\n    console.error('Auth status API error:', error);\n    return Response.json({ isAuthenticated: false }, { status: 500 });\n  }\n}\n`;\n\n  const apiPath = path.join(projectRoot, 'app', apiRoute.replace('/api/', ''), 'route.ts');\n  const apiDir = path.dirname(apiPath);\n\n  // ÎîîÎ†âÌÜ†Î¶¨ ÏÉùÏÑ±\n  if (!fs.existsSync(apiDir)) {\n    fs.mkdirSync(apiDir, { recursive: true });\n  }\n\n  // API ÌååÏùº ÏÉùÏÑ±\n  fs.writeFileSync(apiPath, apiContent);\n  \n  return apiPath;\n}\n\nexport function generateAuthStatusComponent(options: AutoSetupOptions = {}) {\n  const {\n    projectRoot = process.cwd(),\n    componentName = 'AuthStatus'\n  } = options;\n\n  const componentContent = `\"use client\";\nimport { useAuthStatus } from 'nextauth-secure';\n\nexport function ${componentName}() {\n  const { isAuthenticated, isLoading, error } = useAuthStatus();\n\n  if (isLoading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div>\n      {isAuthenticated ? 'Authenticated' : 'Not authenticated'}\n    </div>\n  );\n}\n`;\n\n  const componentPath = path.join(projectRoot, 'app', 'components', `${componentName}.tsx`);\n  const componentDir = path.dirname(componentPath);\n\n  // ÎîîÎ†âÌÜ†Î¶¨ ÏÉùÏÑ±\n  if (!fs.existsSync(componentDir)) {\n    fs.mkdirSync(componentDir, { recursive: true });\n  }\n\n  // Ïª¥Ìè¨ÎÑåÌä∏ ÌååÏùº ÏÉùÏÑ±\n  fs.writeFileSync(componentPath, componentContent);\n  \n  return componentPath;\n}\n\nexport function autoSetup(options: AutoSetupOptions = {}) {\n  const apiPath = generateAuthStatusAPI(options);\n  const componentPath = generateAuthStatusComponent(options);\n  \n  console.log('‚úÖ Auto setup completed!');\n  console.log(`üìÅ API route created: ${apiPath}`);\n  console.log(`üìÅ Component created: ${componentPath}`);\n  console.log('');\n  console.log('üìù Next steps:');\n  console.log('1. Import and use the component in your layout or pages');\n  console.log('2. Make sure your authOptions are properly configured');\n  console.log('3. The API route will be available at /api/auth/status');\n  \n  return { apiPath, componentPath };\n} "],"names":[],"mappings":"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"}