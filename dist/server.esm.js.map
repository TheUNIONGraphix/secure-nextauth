{"version":3,"file":"server.esm.js","sources":["../src/utils/autoSetup.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nexport interface AutoSetupOptions {\n  projectRoot?: string;\n  authOptionsPath?: string;\n}\n\nfunction detectProjectStructure(projectRoot: string) {\n  const hasSrc = fs.existsSync(path.join(projectRoot, 'src'));\n  const hasAppInSrc = hasSrc && fs.existsSync(path.join(projectRoot, 'src', 'app'));\n  const hasAppInRoot = fs.existsSync(path.join(projectRoot, 'app'));\n  \n  return {\n    hasSrc,\n    hasAppInSrc,\n    hasAppInRoot,\n    useSrc: hasSrc && (hasAppInSrc || !hasAppInRoot)\n  };\n}\n\nexport function generateNextAuthAPI(options: AutoSetupOptions = {}) {\n  const {\n    projectRoot = process.cwd(),\n    authOptionsPath = '@/lib/auth'\n  } = options;\n\n  const structure = detectProjectStructure(projectRoot);\n  const baseDir = structure.useSrc ? 'src' : '';\n\n  const nextAuthContent = `import NextAuth from 'next-auth';\nimport { authOptions } from '${authOptionsPath}';\n\nconst handler = NextAuth(authOptions);\n\nexport { handler as GET, handler as POST };\n`;\n\n  const nextAuthPath = path.join(projectRoot, baseDir, 'app', 'api', 'auth', '[...nextauth]', 'route.ts');\n  const nextAuthDir = path.dirname(nextAuthPath);\n\n  if (!fs.existsSync(nextAuthDir)) {\n    fs.mkdirSync(nextAuthDir, { recursive: true });\n  }\n\n  fs.writeFileSync(nextAuthPath, nextAuthContent);\n  return nextAuthPath;\n}\n\nexport function generateAuthOptions(options: AutoSetupOptions = {}) {\n  const {\n    projectRoot = process.cwd(),\n    authOptionsPath = '@/lib/auth'\n  } = options;\n\n  const structure = detectProjectStructure(projectRoot);\n  const baseDir = structure.useSrc ? 'src' : '';\n\n  const authOptionsContent = `import type { NextAuthOptions, User } from 'next-auth';\nimport CredentialsProvider from 'next-auth/providers/credentials';\n\nexport const options: NextAuthOptions = {\n  providers: [\n    CredentialsProvider({\n      name: 'Credentials',\n      credentials: {\n        userId: {\n          label: 'userId',\n          type: 'text',\n          placeholder: 'userId',\n        },\n        password: { label: 'password', type: 'password' },\n      },\n      async authorize(credentials): Promise<User | null> {\n        if (!credentials?.userId || !credentials?.password) return null;\n\n        const data = {\n          userId: credentials.userId,\n          password: credentials.password,\n        };\n        // return authSignIn(data.userId, data.password);\n        return null;\n      },\n    }),\n  ],\n\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.accessToken = user.accessToken;\n        // token.name = user.name;\n        // token.uuid = user.uuid;\n      }\n      return token;\n    },\n\n    async session({ session, token }) {\n      session.user = {\n        ...session.user,\n        accessToken: token.accessToken,\n        // name: token.name,\n        // uuid: token.uuid,\n      };\n      return session;\n    },\n    async redirect({ url, baseUrl }) {\n      if (url.startsWith('/')) return \\`\\${baseUrl}\\${url}\\`;\n      else if (new URL(url).origin === baseUrl) return url;\n      return baseUrl;\n    },\n  },\n  session: {\n    strategy: 'jwt',\n    maxAge: 1 * 24 * 60 * 60 * 30, // 30 days\n  },\n  secret: process.env.AUTH_SECRET,\n  pages: {\n    signIn: '/sign-in',\n  },\n};\n\n`;\n\n  const libPath = path.join(projectRoot, baseDir, 'lib');\n  const authOptionsFilePath = path.join(libPath, 'auth.ts');\n\n  if (!fs.existsSync(libPath)) {\n    fs.mkdirSync(libPath, { recursive: true });\n  }\n\n  fs.writeFileSync(authOptionsFilePath, authOptionsContent);\n  return authOptionsFilePath;\n}\n\nexport function generateAuthStatusAPI(options: AutoSetupOptions = {}) {\n  const {\n    projectRoot = process.cwd(),\n    authOptionsPath = '@/lib/auth'\n  } = options;\n\n  const structure = detectProjectStructure(projectRoot);\n  const baseDir = structure.useSrc ? 'src' : '';\n\n  const authStatusContent = `import { getServerSession } from 'next-auth';\nimport { authOptions } from '${authOptionsPath}';\n\nexport async function GET() {\n  try {\n    const session = await getServerSession(authOptions);\n    const isAuthenticated = !!session?.user;\n    \n    return Response.json({ isAuthenticated });\n  } catch (error) {\n    console.error('Auth status check failed:', error);\n    return Response.json({ isAuthenticated: false }, { status: 500 });\n  }\n}\n`;\n\n  const authStatusPath = path.join(projectRoot, baseDir, 'app', 'api', 'auth', 'status', 'route.ts');\n  const authStatusDir = path.dirname(authStatusPath);\n\n  if (!fs.existsSync(authStatusDir)) {\n    fs.mkdirSync(authStatusDir, { recursive: true });\n  }\n\n  fs.writeFileSync(authStatusPath, authStatusContent);\n  return authStatusPath;\n}\n\nexport function generateSessionContext(options: AutoSetupOptions = {}) {\n  const {\n    projectRoot = process.cwd()\n  } = options;\n\n  const structure = detectProjectStructure(projectRoot);\n  const baseDir = structure.useSrc ? 'src' : '';\n\n  const contextContent = `\"use client\";\nimport React, { createContext, useContext } from 'react';\n\ninterface SessionContextType {\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: () => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst SessionContext = createContext<SessionContextType | undefined>(undefined);\n\nexport const useSession = (): SessionContextType => {\n  const context = useContext(SessionContext);\n  if (context === undefined) {\n    throw new Error('useSession must be used within a SessionContextProvider');\n  }\n  return context;\n};\n\nexport { SessionContext };\n`;\n\n  const contextPath = path.join(projectRoot, baseDir, 'context', 'SessionContext.tsx');\n  const contextDir = path.dirname(contextPath);\n\n  if (!fs.existsSync(contextDir)) {\n    fs.mkdirSync(contextDir, { recursive: true });\n  }\n\n  fs.writeFileSync(contextPath, contextContent);\n  return contextPath;\n}\n\nexport function generateSessionProvider(options: AutoSetupOptions = {}) {\n  const {\n    projectRoot = process.cwd()\n  } = options;\n\n  const structure = detectProjectStructure(projectRoot);\n  const baseDir = structure.useSrc ? 'src' : '';\n\n  const providerContent = `\"use client\";\nimport React, { useState, useEffect } from 'react';\nimport { SessionContext } from '../context/SessionContext';\n\ninterface SessionContextProviderProps {\n  children: React.ReactNode;\n}\n\nexport function SessionContextProvider({ children }: SessionContextProviderProps) {\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  // Ïù∏Ï¶ù ÏÉÅÌÉú ÌôïÏù∏\n  const checkAuthStatus = async () => {\n    try {\n      const response = await fetch('/api/auth/status');\n      if (response.ok) {\n        const data = await response.json();\n        setIsAuthenticated(data.isAuthenticated);\n      }\n    } catch (error) {\n      console.error('Auth status check failed:', error);\n      setIsAuthenticated(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Î°úÍ∑∏Ïù∏ Ìï®Ïàò\n  const login = async () => {\n    try {\n      window.location.href = '/api/auth/signin';\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n\n  // Î°úÍ∑∏ÏïÑÏõÉ Ìï®Ïàò\n  const logout = async () => {\n    try {\n      const response = await fetch('/api/auth/signout', {\n        method: 'POST',\n      });\n      if (response.ok) {\n        setIsAuthenticated(false);\n        window.location.href = '/';\n      }\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const value = {\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n  };\n\n  return (\n    <SessionContext.Provider value={value}>\n      {children}\n    </SessionContext.Provider>\n  );\n}\n`;\n\n  const providerPath = path.join(projectRoot, baseDir, 'provider', 'SessionContextProvider.tsx');\n  const providerDir = path.dirname(providerPath);\n\n  if (!fs.existsSync(providerDir)) {\n    fs.mkdirSync(providerDir, { recursive: true });\n  }\n\n  fs.writeFileSync(providerPath, providerContent);\n  return providerPath;\n}\n\nexport function generateType(options: AutoSetupOptions = {}) {\n  const {\n    projectRoot = process.cwd()\n  } = options;\n\n  const structure = detectProjectStructure(projectRoot);  \n  const baseDir = structure.useSrc ? 'src' : '';\n\n  const typeContent = `import { DefaultSession, DefaultUser } from 'next-auth/next';\n\ndeclare module 'next-auth' {\n  interface Session {\n    user: {\n      accessToken: string;\n      // name: string;\n      // uuid: string;\n    } & DefaultSession['user'];\n  }\n\n  interface User extends DefaultUser {\n    accessToken: string;\n    // name: string;\n    // uuid: string;\n  }\n}\n\ndeclare module 'next-auth/jwt' {\n  interface JWT {\n    accessToken: string;\n    // name: string;\n    // uuid: string;\n  }\n}\n`;\n\n  const typePath = path.join(projectRoot, baseDir, 'types', 'auth.d.ts');\n  const typeDir = path.dirname(typePath);\n\n  if (!fs.existsSync(typeDir)) {\n    fs.mkdirSync(typeDir, { recursive: true });\n  }\n\n  fs.writeFileSync(typePath, typeContent);\n  return typePath;\n}\n\nexport function autoSetup(options: AutoSetupOptions = {}) {\n  const structure = detectProjectStructure(options.projectRoot || process.cwd());\n  \n  const nextAuthPath = generateNextAuthAPI(options);\n  const authOptionsPath = generateAuthOptions(options);\n  const authStatusPath = generateAuthStatusAPI(options);\n  const contextPath = generateSessionContext(options);\n  const providerPath = generateSessionProvider(options);\n  const typePath = generateType(options);\n  \n  console.log('‚úÖ Auto setup completed!');\n  console.log(`üìÅ Project structure: ${structure.useSrc ? 'src/' : ''}app/`);\n  console.log(`üìÅ NextAuth API: ${nextAuthPath}`);\n  console.log(`üìÅ Auth options: ${authOptionsPath}`);\n  console.log(`üìÅ Auth status API: ${authStatusPath}`);\n  console.log(`üìÅ Session context: ${contextPath}`);\n  console.log(`üìÅ Session provider: ${providerPath}`);\n  console.log('');\n  console.log('üìù Next steps:');\n  console.log('1. Install dependencies: npm install next-auth');\n  console.log('2. Set up environment variables in .env.local:');\n  console.log('   NEXTAUTH_SECRET=your-secret-here');\n  console.log('   GOOGLE_CLIENT_ID=your-google-client-id');\n  console.log('   GOOGLE_CLIENT_SECRET=your-google-client-secret');\n  console.log('3. Import SessionContextProvider in your layout');\n  console.log('4. Use useSession hook in your components');\n  \n  return { \n    nextAuthPath, \n    authOptionsPath, \n    authStatusPath, \n    contextPath, \n    providerPath,\n    typePath\n  };\n} "],"names":[],"mappings":"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"}